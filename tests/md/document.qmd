---
title: "d3r"
format: html
---


```{r}
#| echo: false
#| results: asis
library(d3r)
style = 'svg {
  border: 1px solid black;
}'

'// Dimensions and margins
const width = 600;
const height = 400;

// Create SVG container
const svg = d3.select("#container")
    .append("svg")
    .attr("width", width)
    .attr("height", height);

let is_drawing = false; // Changed from const to let

svg.on("mousemove", function(event) {
    var pos = d3.pointer(event, this); // Updated for D3 v6+
    if (is_drawing) {
        svg.append("circle")
            .attr("cx", pos[0])
            .attr("cy", pos[1])
            .style("fill", "red")
            .attr("r", 3);
    }
}).on("mousedown", function() {
    is_drawing = true;
}).on("mouseup", function() {
    is_drawing = false;
});

// Create a separate div for the button
const buttonContainer = d3.select("body")
    .append("div")
    .attr("id", "buttonContainer")
    .style("margin-top", "10px");
    
// Add download button
buttonContainer.append("button")
  .text("Download SVG")
  .on("click", function() {
    const serializer = new XMLSerializer();
    const svgBlob = new Blob([serializer.serializeToString(svg.node())], { type: "image/svg+xml;charset=utf-8" });
    const url = URL.createObjectURL(svgBlob);
  
    const link = document.createElement("a");
    link.href = url;
    link.download = "drawing.svg";
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
});
' |> make(title = "Draw Something & Download It", 
          mode = "Quarto",
          style = style,
          dir = "html_output",
          width = 610, 
          height = 600) 
```

